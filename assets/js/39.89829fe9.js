(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{449:function(s,t,a){"use strict";a.r(t);var e=a(42),n=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"es7学习笔记-一-elasticsearch的安装与启动"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#es7学习笔记-一-elasticsearch的安装与启动"}},[s._v("#")]),s._v(" ES7学习笔记（一）Elasticsearch的安装与启动")]),s._v(" "),a("p",[s._v("Elasticsearch是一个非常好用的搜索引擎，和Solr一样，他们都是基于倒排索引的。今天我们就看一看Elasticsearch如何进行安装。")]),s._v(" "),a("h2",{attrs:{id:"下载和安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#下载和安装"}},[s._v("#")]),s._v(" 下载和安装")]),s._v(" "),a("p",[a("strong",[s._v("今天我们的目的是搭建一个有3个节点的Elasticsearch集群")]),s._v("，所以我们找了3台虚拟机，ip分别是：")]),s._v(" "),a("ul",[a("li",[s._v("192.168.73.130")]),s._v(" "),a("li",[s._v("192.168.73.131")]),s._v(" "),a("li",[s._v("192.168.73.132")])]),s._v(" "),a("p",[s._v("然后我们要下载ES，这里我们采用的版本是"),a("code",[s._v("7.6.0")]),s._v("。我们进入到"),a("code",[s._v("/opt")]),s._v("目录下，下载elasticsearch7.6.0")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" -L -O https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-7.6.0-linux-x86_64.tar.gz\n")])])]),a("p",[s._v("下载的过程比较慢。下载完成后，我们解压：")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("tar")]),s._v(" -zxvf elasticsearch-7.6.0-linux-x86_64.tar.gz\n")])])]),a("p",[s._v("在启动elasticsearch之前，这里有一个"),a("strong",[s._v("重点：ES在启动的时候是不允许使用root账户的")]),s._v("，所以我们要新建一个elasticsearch用户：")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("useradd")]),s._v(" elasticsearch\n")])])]),a("p",[s._v("然后把"),a("code",[s._v("elasticsearch-7.6.0")]),s._v("这个目录和目录下所有的文件的拥有者都改成elasticsearch:")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("chown")]),s._v(" elasticsearch:elasticsearch -R elasticsearch-7.6.0\n")])])]),a("p",[s._v("然后，我们切换到"),a("code",[s._v("elasticsearch")]),s._v("用户：")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("su")]),s._v(" - elasticsearch\n")])])]),a("p",[s._v("我们将ES安装在"),a("code",[s._v("/opt")]),s._v("目录下，先进入到"),a("code",[s._v("/opt")]),s._v("目录，")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" /opt/elasticsearch-7.6.0\n")])])]),a("p",[s._v("我们启动一下，看看单机版能不能启动成功。")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("./bin/elasticsearch\n")])])]),a("p",[s._v("可以启动成功。但是我们通过浏览器访问这个ip的9200端口时，是不成功的。我们需要对elasticsearch进行配置，才可以在别的机器上访问成功。")]),s._v(" "),a("h2",{attrs:{id:"es的配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#es的配置"}},[s._v("#")]),s._v(" ES的配置")]),s._v(" "),a("p",[s._v("es的所有配置文件都在"),a("code",[s._v("${ES_HOME}/config")]),s._v("这个目录下，首先我们设置一下jvm参数，打开jvm.options文件，")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("vim")]),s._v(" jvm.options\n")])])]),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("################################################################")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## IMPORTANT: JVM heap size")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("################################################################")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("##")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## You should always set the min and max JVM heap")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## size to the same value. For example, to set")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## the heap to 4 GB, set:")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("##")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## -Xms4g")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## -Xmx4g")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("##")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## See https://www.elastic.co/guide/en/elasticsearch/reference/current/heap-size.html")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## for more information")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("##")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("################################################################")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Xms represents the initial size of total heap space")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Xmx represents the maximum size of total heap space")]),s._v("\n\n-Xms256m\n-Xmx256m\n\n")])])]),a("p",[s._v("我们改一下堆内存的大小，我这里使用的虚拟机，只分配了1g的内存，所以，我这里统一调整为256m内存，大家可以根据自己机器的内存情况进行调整。")]),s._v(" "),a("p",[s._v("然后，我们再打开"),a("code",[s._v("elasticsearch.yml")]),s._v("文件，配置一下这里边的参数。")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ======================== Elasticsearch Configuration =========================")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# NOTE: Elasticsearch comes with reasonable defaults for most settings.")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#       Before you set out to tweak and tune the configuration, make sure you")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#       understand what are you trying to accomplish and the consequences.")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# The primary way of configuring a node is via this file. This template lists")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# the most important settings you may want to configure for a production cluster.")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Please consult the documentation for further information on configuration options:")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# https://www.elastic.co/guide/en/elasticsearch/reference/index.html")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ---------------------------------- Cluster -----------------------------------")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Use a descriptive name for your cluster:")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\ncluster.name: cluster-a\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ------------------------------------ Node ------------------------------------")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Use a descriptive name for the node:")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\nnode.name: node-130\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Add custom attributes to the node:")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#node.attr.rack: r1")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ----------------------------------- Paths ------------------------------------")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n\n")])])]),a("p",[s._v("我们先配置一下集群的名字，也就是"),a("code",[s._v("cluster.name")]),s._v("，在这里，我们叫做"),a("code",[s._v("cluster-a")]),s._v("。在另外两台机器上，集群的名字也要叫做"),a("code",[s._v("cluster-a")]),s._v("，这样才能够组成一个集群。"),a("strong",[s._v("在ES中，集群名字相同的节点，会组成ES集群。")])]),s._v(" "),a("p",[s._v("然后，我们再修改"),a("code",[s._v("node.name")]),s._v("节点名称，这个名称是每一个节点的，**所以，每个节点的名称都不能相同。**这里我们以ip命名，130这台机器，节点名称就叫"),a("code",[s._v("node-130")]),s._v("，另外两台叫做"),a("code",[s._v("node-131")]),s._v("和"),a("code",[s._v("node-132")]),s._v("。")]),s._v(" "),a("p",[s._v("我们再接着看后面的配置，")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ----------------------------------- Paths ------------------------------------")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Path to directory where to store the data (separate multiple locations by comma):")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#path.data: /path/to/data")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Path to log files:")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#path.logs: /path/to/logs")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ----------------------------------- Memory -----------------------------------")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Lock the memory on startup:")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#bootstrap.memory_lock: true")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Make sure that the heap size is set to about half the memory available")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# on the system and that the owner of the process is allowed to use this")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# limit.")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Elasticsearch performs poorly when the system is swapping the memory.")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ---------------------------------- Network -----------------------------------")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Set the bind address to a specific IP (IPv4 or IPv6):")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\nnetwork.host: "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".73.130\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Set a custom port for HTTP:")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#http.port: 9200")]),s._v("\n\n")])])]),a("p",[s._v("路径和内存，咱们使用默认的就好，咱们重点看一下网络。我们需要指定一下ES绑定的地址，如果不设置，那么默认绑定的就是localhost，也就是127.0.0.1，这样就只有本机能够访问了，其他机器是访问不了的。所以这里我们要绑定每台机器的地址，分别是"),a("code",[s._v("192.168.73.130")]),s._v("，"),a("code",[s._v("192.168.73.131")]),s._v("，"),a("code",[s._v("192.168.73.132")]),s._v("。")]),s._v(" "),a("p",[s._v("接下来，我们看一下集群的相关配置，")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# --------------------------------- Discovery ----------------------------------")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Pass an initial list of hosts to perform discovery when this node is started:")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# The default list of hosts is ["127.0.0.1", "[::1]"]')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\ndiscovery.seed_hosts: "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"192.168.73.130"')]),s._v(", "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"192.168.73.131"')]),s._v(","),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"192.168.73.132"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Bootstrap the cluster using an initial set of master-eligible nodes:")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\ncluster.initial_master_nodes: "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"node-130"')]),s._v(", "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"node-131"')]),s._v(", "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"node-132"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# For more information, consult the discovery and cluster formation module documentation.")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n\n")])])]),a("p",[s._v("也就是Discovery这一段的配置，我们先设置一下集群中节点的地址，也就是"),a("code",[s._v("discovery.seed_hosts")]),s._v("这一段，我们把3台机器的ip写在这里。然后再把3台机器的节点名称写在"),a("code",[s._v("cluster.initial_master_nodes")]),s._v("，好了，集群的配置到这里就告一段落了。")]),s._v(" "),a("h2",{attrs:{id:"系统配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#系统配置"}},[s._v("#")]),s._v(" 系统配置")]),s._v(" "),a("p",[s._v("接下来我们再看看重要的系统配置。在ES的官网上，有这样一句话，")]),s._v(" "),a("blockquote",[a("p",[s._v("Ideally, Elasticsearch should run alone on a server and use all of the resources available to it.")])]),s._v(" "),a("p",[s._v("翻译过来是，合理的做法是，ES应该在一个服务中单独运行，并且可以使用这个机器中所有的可用资源。")]),s._v(" "),a("p",[s._v("只要你在配置文件中配置了"),a("code",[s._v("network.host")]),s._v("，ES就认为你将发布生产环境，如果你的一些配置不正确，那么ES就不会启动成功。在这里，ES也要求我们对系统的一些配置做出修改。")]),s._v(" "),a("h3",{attrs:{id:"ulimit调整"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ulimit调整"}},[s._v("#")]),s._v(" ulimit调整")]),s._v(" "),a("p",[s._v("首先，我们要修改Linux系统的文件打开数，将其调到65535。")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("su")]),s._v(" -\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("ulimit")]),s._v(" -n "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("65535")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exit")]),s._v("\n")])])]),a("p",[s._v("然后再修改"),a("code",[s._v("limits.conf")]),s._v("文件，我们同样切换到root用户，打开"),a("code",[s._v("limits.conf")]),s._v("文件，")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("vim")]),s._v(" /etc/security/limits.conf\n")])])]),a("p",[s._v("在文件的最后添加"),a("code",[s._v("elasticsearch - nofile 65535")]),s._v("，然后保存退出。")]),s._v(" "),a("h3",{attrs:{id:"关闭swapping"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关闭swapping"}},[s._v("#")]),s._v(" 关闭swapping")]),s._v(" "),a("p",[s._v("其次，在ES的官方文档上，要求"),a("code",[s._v("Disabled Swapping")]),s._v("，我们要关掉它。执行以下命令：")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" swapoff -a\n")])])]),a("p",[s._v("这只是临时的关闭swapping，重启linux后，会失效。如果要永久的关闭swapping，需要编辑"),a("code",[s._v("/etc/fstab")]),s._v("文件，将包含swap的行的注释掉。")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("/dev/mapper/centos-root /                       xfs     defaults        "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("UUID")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("6a38540f-2ba9-437b-ac8b-8757f5754fff /boot                   xfs     defaults        "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# /dev/mapper/centos-swap swap                    swap    defaults        0 0")]),s._v("\n\n")])])]),a("h3",{attrs:{id:"调整mmapfs的数值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#调整mmapfs的数值"}},[s._v("#")]),s._v(" 调整mmapfs的数值")]),s._v(" "),a("p",[s._v("由于ES是使用"),a("code",[s._v("mmapfs")]),s._v("存储索引，但是系统的默认值太低了，我们调高一点。")]),s._v(" "),a("div",{staticClass:"language-she extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("sysctl -w vm.max_map_count=262144\n")])])]),a("h3",{attrs:{id:"线程的数量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#线程的数量"}},[s._v("#")]),s._v(" 线程的数量")]),s._v(" "),a("p",[s._v("确保elasticsearch用户最少可创建4096个线程。我们还是要以root用户去设置。")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("su")]),s._v(" -\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("ulimit")]),s._v(" -u "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4096")]),s._v("\n")])])]),a("p",[s._v("同样，这知识临时的方案，linux重启后会失效，我们需要修改配置文件"),a("code",[s._v("/etc/security/limits.conf")]),s._v("，将"),a("code",[s._v("nproc")]),s._v("设置为4096。")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("elasticsearch  -  nproc "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4096")]),s._v("\n")])])]),a("p",[s._v("好，到这里我们所有的配置就完成了，现在依次启动3个节点的ES。启动完成后，我们在浏览器中检查以下集群的状态，"),a("code",[s._v("http://192.168.73.130:9200/_cluster/health")]),s._v("，")]),s._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"cluster_name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"cluster-a"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"status"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"green"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"timed_out"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"number_of_nodes"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"number_of_data_nodes"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"active_primary_shards"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"active_shards"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"relocating_shards"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"initializing_shards"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"unassigned_shards"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"delayed_unassigned_shards"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"number_of_pending_tasks"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"number_of_in_flight_fetch"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"task_max_waiting_in_queue_millis"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"active_shards_percent_as_number"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100.0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("p",[s._v("我们看到status是green。说明我们的ES集群搭建成功了。")]),s._v(" "),a("h2",{attrs:{id:"向集群中添加节点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#向集群中添加节点"}},[s._v("#")]),s._v(" 向集群中添加节点")]),s._v(" "),a("p",[s._v("当你启动一个ES实例的时候，你正在启动了一个ES节点。一个ES集群是一组有着相同"),a("code",[s._v("cluster.name")]),s._v("参数的节点。当节点加入或离开集群时，集群会自动重组，甚至在可用的节点间重新分配数据。")]),s._v(" "),a("p",[s._v("如果你正在运行一个单一的ES实例，那么你就有了一个单节点的集群。所有的基础分片都在这个单节点上，没有副本节点。因此集群的状态是黄色，集群处于可用状态，但是在事故中有丢失数据的风险。")]),s._v(" "),a("p",[s._v("向集群中添加节点可以提升集群的容量和可靠性，默认的，一个节点既是一个数据节点，也是一个有资格被选举成master节点，从而控制整个集群的节点。你也可以为了一些特殊的用途配置一个新的节点，例如，处理接收的请求。")]),s._v(" "),a("p",[s._v("当你向集群中添加更多的节点，集群会自动分配副本分片。当所有的基础分片和副本分片都处于激活状态，集群的状态会变为绿色。")]),s._v(" "),a("p",[s._v("向集群中添加节点：")]),s._v(" "),a("ol",[a("li",[s._v("配置一个新的ES实例；")]),s._v(" "),a("li",[s._v("在"),a("code",[s._v("cluster.name")]),s._v("变量中指定相同的集群名称；")]),s._v(" "),a("li",[s._v("在"),a("code",[s._v("discovery.seed_hosts")]),s._v("中填写上集群的ip地址；")]),s._v(" "),a("li",[s._v("启动ES，这个节点会被自动的发现，并且加入集群。")])]),s._v(" "),a("p",[s._v("到这里，向集群中添加节点就完成了。")])])}),[],!1,null,null,null);t.default=n.exports}}]);