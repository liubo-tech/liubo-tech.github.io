(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{357:function(s,t,a){s.exports=a.p+"assets/img/image-20201028104022181.e8106236.png"},439:function(s,t,a){"use strict";a.r(t);var e=a(42),r=Object(e.a)({},(function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h1",{attrs:{id:"mysql主主模式-keepalived高可用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mysql主主模式-keepalived高可用"}},[s._v("#")]),s._v(" MySQL主主模式+Keepalived高可用")]),s._v(" "),e("p",[s._v("今天闲来无事，打算搭建一个MySQL的高可用架构，采用的是MySQL的主主结构，再外加Keepalived，对外统一提供虚IP。先来说说背景吧，现在的项目为了高可用性，都是避免单节点的存在的，比如，我们的应用程序，都是部署多个节点，通过Nginx做负载均衡，某个节点出现问题，并不会影响整体应用。那么数据库层如何搭建高可用的架构呢？今天我们就来看看。")]),s._v(" "),e("h2",{attrs:{id:"整体架构"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#整体架构"}},[s._v("#")]),s._v(" 整体架构")]),s._v(" "),e("p",[s._v("MySQL采用主主结构，我们使用两台机器就够了，然后再这两台机器上再安装Keepalived，使用vrrp技术，虚拟出一个IP。两台机器如下：")]),s._v(" "),e("ul",[e("li",[s._v("192.168.73.141：MySQL（主1）、Keepalived（MASTER）")]),s._v(" "),e("li",[s._v("192.168.73.142：MySQL（主2）、Keepalived（BACKUP）")]),s._v(" "),e("li",[s._v("192.168.73.150：虚IP")])]),s._v(" "),e("p",[s._v("整体架构图如下：")]),s._v(" "),e("p",[e("img",{attrs:{src:a(357),alt:"image-20201028104022181"}})]),s._v(" "),e("h2",{attrs:{id:"mysql主主搭建"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mysql主主搭建"}},[s._v("#")]),s._v(" MySQL主主搭建")]),s._v(" "),e("p",[s._v("我们分别在两台机器上安装MySQL，使用yum方式安装，首先从MySQL官网下载rpm包，选择对应的系统，在这里，我们选择CentOS7的prm包，"),e("code",[s._v("mysql80-community-release-el7-3.noarch.rpm")]),s._v("。然后将rpm文件分别上传到两台机器上，接下来我们就是用yum来安装MySQL。")]),s._v(" "),e("p",[s._v("在192.168.73.141（主1）执行如下命令，")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 使用yum安装rpm包")]),s._v("\nyum "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" mysql80-community-release-el7-3.noarch.rpm\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 安装MySQL社区版 时间较长 耐心等待")]),s._v("\nyum "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" mysql-community-server\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#启动MySQL服务")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("service")]),s._v(" mysqld start\n")])])]),e("p",[s._v("到这里，MySQL就安装完成，并且正常启动了。然后，我们用root账号登录MySQL，并创建一个可用的账号。")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 从MySQL的日志中 找到root账号的临时密码")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'temporary password'")]),s._v(" /var/log/mysqld.log\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 使用root账号登录 输入临时密码 登录成功")]),s._v("\nmysql -uroot -p\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 修改root账号的密码 使用MYSQL_NATIVE_PASSWORD的加密方式 这种方式大多数客户端都可以连接")]),s._v("\nALTER "),e("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("USER")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'root'")]),s._v("@"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'localhost'")]),s._v(" IDENTIFIED WITH MYSQL_NATIVE_PASSWORD BY "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'MyNewPass4!'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 创建MySQL账号")]),s._v("\nCREATE "),e("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("USER")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'USER'")]),s._v("@"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%'")]),s._v(" IDENTIFIED WITH MYSQL_NATIVE_PASSWORD BY "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'USER_PWD'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 对USER账号授权")]),s._v("\nGRANT ALL ON *.* TO "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'USER'")]),s._v("@"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 刷新权限")]),s._v("\nFLUSH PRIVILEGES"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),e("p",[s._v("好了，到这里，在192.168.73.141上安装MySQL成功，并且创建了USER账户，我们可以使用NAVICAT等客户端连接。")]),s._v(" "),e("p",[e("strong",[s._v("在192.168.73.142（主2）上也执行上面的命令")]),s._v("，这样我们在两台机器上都安装了MySQL。接下来，我们就要配置MySQL的主主结构了。")]),s._v(" "),e("p",[s._v("首先，我们修改192.168.73.141（主1）上的my.cnf文件。")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("vim")]),s._v(" /etc/my.cnf\n\n\n"),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("datadir")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/var/lib/mysql\n"),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("socket")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/var/lib/mysql/mysql.sock\n\nlog-error"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/var/log/mysqld.log\npid-file"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/var/run/mysqld/mysqld.pid\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 配置server-id 每个MySQL实例的server-id都不能相同")]),s._v("\nserver-id"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# MySQL的日志文件的名字")]),s._v("\nlog-bin"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("mysql_master\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 作为从库时 更新操作是否写入日志 on：写入  其他数据库以此数据库做主库时才能进行同步")]),s._v("\nlog-slave-updates"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("on\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# MySQL系统库的数据不需要同步 我们这里写了3个  更加保险")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 同步数据时忽略一下数据库 但是必须在使用use db的情况下才会忽略；如果没有使用use db 比如create user  数据还是会同步的")]),s._v("\nreplicate-ignore-db"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("information_schema\nreplicate-ignore-db"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("mysql\nreplicate-ignore-db"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("performance_schema\nreplicate-ignore-db"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("sys\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 使用通配符忽略MySQL系统库的表  这样在create user时也不会进行同步了")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("replicate_wild_ignore_table")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("information_schema.%\n"),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("replicate_wild_ignore_table")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("mysql.%\n"),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("replicate_wild_ignore_table")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("performance_schema.%\n"),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("replicate_wild_ignore_table")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("sys.%\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# MySQL系统库的日志不计入binlog 这样更加保险了")]),s._v("\nbinlog-ignore-db"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("information_schema\nbinlog-ignore-db"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("mysql\nbinlog-ignore-db"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("performance_schema\nbinlog-ignore-db"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("sys\n")])])]),e("p",[s._v("在192.168.73.142（主2）上也修改my.cnf文件，我们直接复制过去，只需要修改其中的两个地方，如下：")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 配置server-id=2")]),s._v("\nserver-id"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# MySQL的日志文件的名字 不改名字也可以 这里主要为了区分")]),s._v("\nlog-bin"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("mysql_slave\n")])])]),e("p",[s._v("配置文件都已经修改好了，我们分别在192.168.73.141（主1）和192.168.73.142（主2）上重启MySQL服务，")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("service")]),s._v(" mysqld restart\n")])])]),e("p",[s._v("下面我们就要配置主从了，其实主主模式就是配置两个主从，先配置192.168.73.141（主1）->192.168.73.142（主2）的主从，然后再反过来配置192.168.73.142（主2）->192.168.73.141（主1）的主从，这样主主的模式就配置好了。")]),s._v(" "),e("p",[s._v("我们先来配置"),e("strong",[s._v("192.168.73.141（主1）->192.168.73.142（主2）的主从")])]),s._v(" "),e("p",[s._v("先登录192.168.73.141（主1）的数据库，并执行如下命令：")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 创建备份的账号 使用MYSQL_NATIVE_PASSWORD的方式加密")]),s._v("\nmysql"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" CREATE "),e("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("USER")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'repl_master'")]),s._v("@"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%'")]),s._v(" IDENTIFIED WITH MYSQL_NATIVE_PASSWORD BY "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'password'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 对repl_master授予备份的权限")]),s._v("\nmysql"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" GRANT REPLICATION SLAVE ON *.* TO "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'repl_master'")]),s._v("@"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 刷新权限")]),s._v("\nmysql"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" FLUSH PRIVILEGES"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看MySQL主节点的状态")]),s._v("\nmysql"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" SHOW MASTER STATUS"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n+-------------------+---------+--------------+---------------------------------------------+------------------+\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" File               "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" Position "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" Binlog_Do_DB "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" Binlog_Ignore_DB                             "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" Executed_Gtid_Set "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n+-------------------+---------+--------------+---------------------------------------------+------------------+\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" mysql_master.000001 "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("     "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("516")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("              "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" information_schema,mysql,performance_schema,sys "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("                  "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n+-------------------+---------+--------------+---------------------------------------------+------------------+\n"),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" row "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v("\n")])])]),e("p",[s._v("我们要记住binlog文件的名字，也就是mysql_master.000001，和位置，也就是516。")]),s._v(" "),e("p",[s._v("然后，我们再登录到192.168.73.142（主2）的数据库，执行如下命令：")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("mysql"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" CHANGE MASTER TO\n\t\t   "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# MySQL主的IP")]),s._v("\n    -"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("     "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("MASTER_HOST")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'192.168.73.141'")]),s._v(",\n           "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# MySQL主的端口")]),s._v("\n    -"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("     "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("MASTER_PORT")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("3306")]),s._v("\n           "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# MySQL主的备份账号")]),s._v("\n    -"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("     "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("MASTER_USER")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'repl_master'")]),s._v(",\n           "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# MySQL主的备份账号密码")]),s._v("\n    -"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("     "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("MASTER_PASSWORD")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'password'")]),s._v(",\n           "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 日志文件 通过show master status得到的")]),s._v("\n    -"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("     "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("MASTER_LOG_FILE")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'mysql_master.000001'")]),s._v(",\n           "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 日志文件位置 通过show master status得到的")]),s._v("\n    -"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("     "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("MASTER_LOG_POS")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("516")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    \n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 开启从库")]),s._v("\nmysql"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" START SLAVE"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看从库的状态")]),s._v("\nmysql"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" SHOW SLAVE STATUS"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),e("p",[s._v("这样，"),e("strong",[s._v("192.168.73.141（主1）->192.168.73.142（主2）的主从")]),s._v("就搭建好了。然后，我们再反过来，搭建"),e("strong",[s._v("192.168.73.142（主2）->192.168.73.141（主1）的主从")]),s._v("。")]),s._v(" "),e("p",[s._v("先登录192.168.73.142（主2）的数据库，执行如下命令：")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 创建备份的账号 使用MYSQL_NATIVE_PASSWORD的方式加密")]),s._v("\nmysql"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" CREATE "),e("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("USER")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'repl_slave'")]),s._v("@"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%'")]),s._v(" IDENTIFIED WITH MYSQL_NATIVE_PASSWORD BY "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'password'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 对repl_slave授予备份的权限")]),s._v("\nmysql"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" GRANT REPLICATION SLAVE ON *.* TO "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'repl_slave'")]),s._v("@"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 刷新权限")]),s._v("\nmysql"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" FLUSH PRIVILEGES"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看MySQL主节点的状态")]),s._v("\nmysql"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" SHOW MASTER STATUS"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n+-------------------+---------+--------------+---------------------------------------------+------------------+\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" File               "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" Position "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" Binlog_Do_DB "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" Binlog_Ignore_DB                             "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" Executed_Gtid_Set "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n+-------------------+---------+--------------+---------------------------------------------+------------------+\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" mysql_slave.000001 "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("     "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("379")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("              "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" information_schema,mysql,performance_schema,sys "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("                  "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n+-------------------+---------+--------------+---------------------------------------------+------------------+\n"),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" row "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v("\n")])])]),e("p",[s._v("再登录到192.168.73.141（主1）的数据库，执行如下命令：")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("mysql"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" CHANGE MASTER TO\n\t\t   "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# MySQL主的IP")]),s._v("\n    -"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("     "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("MASTER_HOST")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'192.168.73.142'")]),s._v(",\n           "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# MySQL主的端口")]),s._v("\n    -"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("     "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("MASTER_PORT")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("3306")]),s._v("\n           "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# MySQL主的备份账号")]),s._v("\n    -"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("     "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("MASTER_USER")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'repl_slave'")]),s._v(",\n           "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# MySQL主的备份账号密码")]),s._v("\n    -"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("     "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("MASTER_PASSWORD")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'password'")]),s._v(",\n           "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 日志文件 通过show master status得到的")]),s._v("\n    -"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("     "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("MASTER_LOG_FILE")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'mysql_slave.000001'")]),s._v(",\n           "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 日志文件位置 通过show master status得到的")]),s._v("\n    -"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("     "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("MASTER_LOG_POS")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("379")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    \n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 开启从库")]),s._v("\nmysql"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" START SLAVE"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看从库的状态")]),s._v("\nmysql"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" SHOW SLAVE STATUS"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),e("p",[s._v("这样，"),e("strong",[s._v("192.168.73.142（主2）->192.168.73.141（主1）的主从")]),s._v("也搭建好了。我们可以使用navicat分别连接192.168.73.141（主1）和192.168.73.142（主2），并执行建表、插入语句，验证一下主主同步是否成功，这里就不给大家演示了。")]),s._v(" "),e("h2",{attrs:{id:"keepalived高可用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#keepalived高可用"}},[s._v("#")]),s._v(" Keepalived高可用")]),s._v(" "),e("p",[s._v("MySQL主主结构已经搭建好了，无论从哪个MySQL插入数据，都会同步到另外一个MySQL。虽然有了MySQL主主结构，但是不能保证高可用，比如，我们的应用程序连接的是192.168.73.141（主1），倘若192.168.73.141（主1）的MySQL挂掉了，我们的应用程序并不能自动的切换到192.168.73.142（主2），我们的应用程序也是不可用的状态。要做到这一点，就要借助于Keepalived。")]),s._v(" "),e("p",[s._v("Keepalived有两个主要的功能：")]),s._v(" "),e("ul",[e("li",[s._v("提供虚IP，实现双机热备")]),s._v(" "),e("li",[s._v("通过LVS，实现负载均衡")])]),s._v(" "),e("p",[s._v("我们这里使用Keepalived，只需要使用其中的一个功能，提供虚IP，实现双机热备。我们需要在192.168.73.141（主1）和192.168.73.142（主2）上都安装Keepalived，执行命令如下：")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("yum "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" keepalived\n")])])]),e("p",[s._v("我们直接使用yum进行安装。安装完之后，编辑keepalived的配置文件，首先编辑192.168.73.141（主1）上的配置文件，如下：")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("vim")]),s._v(" /etc/keepalived/keepalived.conf\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 全局配置 不用动  只需注释掉vrrp_strict")]),s._v("\nglobal_defs "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n   notification_email "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n     acassen@firewall.loc\n     failover@firewall.loc\n     sysadmin@firewall.loc\n   "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n   notification_email_from Alexandre.Cassen@firewall.loc\n   smtp_server "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".200.1\n   smtp_connect_timeout "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("30")]),s._v("\n   router_id LVS_DEVEL\n   vrrp_skip_check_adv_addr\n   "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#必须注释掉 否则报错")]),s._v("\n   "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#vrrp_strict")]),s._v("\n   vrrp_garp_interval "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n   vrrp_gna_interval "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 检查mysql服务是否存活的脚本")]),s._v("\nvrrp_script chk_mysql "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    script "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/usr/bin/killall -0 mysqld"')]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# vrrp配置虚IP")]),s._v("\nvrrp_instance VI_1 "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 状态：MASTER  另外一台机器为BACKUP")]),s._v("\n    state MASTER\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 绑定的网卡")]),s._v("\n    interface ens33\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 虚拟路由id  两台机器需保持一致")]),s._v("\n    virtual_router_id "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("51")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 优先级 MASTER的值要大于BACKUP")]),s._v("\n    priority "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v("\n    advert_int "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n    authentication "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        auth_type PASS\n        auth_pass "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1111")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 虚拟IP地址 两台keepalived需要一致")]),s._v("\n    virtual_ipaddress "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".73.150\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 检查脚本 vrrp_script的名字")]),s._v("\n    track_script "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        chk_mysql\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("###后边的virtual_server全部注释掉 它是和LVS做负载均衡用的  这里用不到")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("###")]),s._v("\n")])])]),e("p",[s._v("再编辑192.168.73.142（主2）上的配置文件，只需要将state MASTER改为state BACKUP，如下：")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("state BACKUP\n")])])]),e("p",[s._v("通过keepalived的配置，我们对外提供192.168.73.150的IP，这个IP实际指向是192.168.73.141（主1），因为它的state是MASTER。当keepalived检测到192.168.73.141（主1）上的MySQL不可用时，会自动切换到192.168.73.142（主2）。对于外部用户是无感知的，因为外部统一使用的是192.168.73.150。")]),s._v(" "),e("p",[s._v("我们再来看看检测的脚本"),e("code",[s._v("/usr/bin/killall -0 mysqld")]),s._v("，killall命令不是系统自带的，需要安装，我们还是使用yum来安装，如下：")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 先查询一下killall")]),s._v("\nyum search "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("killall")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#找到了psmisc.x86_64")]),s._v("\nLoading mirror speeds from cached hostfile\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("Matched: "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("killall")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v("\npsmisc.x86_64 "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" Utilities "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" managing processes on your system\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 安装psmisc")]),s._v("\nyum "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" psmisc\n")])])]),e("p",[s._v("这样我们就可以使用killall命令了。"),e("code",[s._v("killall -0")]),s._v("并不是杀掉进程，而是检查进程是否存在，如果存在则返回0，如果不存在则返回1。当返回1时，keepalived就会切换主备状态。")]),s._v(" "),e("p",[s._v("好了，killall也介绍完了，我们在两台机器上启动keepalived，如下：")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 启动keepalived")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("service")]),s._v(" keepalived start\n")])])]),e("p",[s._v("然后，我们在192.168.73.141（主1）上查看一下IP是否有192.168.73.150，如下：")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("ip")]),s._v(" addr\n\n"),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(": lo: "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("LOOPBACK,UP,LOWER_UP"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" mtu "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("65536")]),s._v(" qdisc noqueue state UNKNOWN group default qlen "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1000")]),s._v("\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n    inet "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1/8 scope "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("host")]),s._v(" lo\n       valid_lft forever preferred_lft forever\n    inet6 ::1/128 scope "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("host")]),s._v(" \n       valid_lft forever preferred_lft forever\n"),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(": ens33: "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("BROADCAST,MULTICAST,UP,LOWER_UP"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" mtu "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1500")]),s._v(" qdisc pfifo_fast state UP group default qlen "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1000")]),s._v("\n    link/ether 00:0c:29:57:8c:cd brd ff:ff:ff:ff:ff:ff\n    inet "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".73.141/24 brd "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".73.255 scope global noprefixroute ens33\n       valid_lft forever preferred_lft forever\n    inet "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".73.150/32 scope global ens33  "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 我们看到了192.168.73.150")]),s._v("\n       valid_lft forever preferred_lft forever\n    inet6 fe80::720b:92b0:7f78:57ed/64 scope "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("link")]),s._v(" noprefixroute \n       valid_lft forever preferred_lft forever\n")])])]),e("p",[s._v("到这里，keepalived的配置就完成了，我们通过navicat连接192.168.73.150，可以正常的连接数据库，实际上它连接的是192.168.73.141的数据库，我们操作数据库也是正常的。")]),s._v(" "),e("p",[s._v("然后，我们停掉192.168.73.141（主1）上的MySQL服务，")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("service")]),s._v(" mysqld stop\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 再用 ip addr查看一下")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("ip")]),s._v(" addr\n"),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(": lo: "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("LOOPBACK,UP,LOWER_UP"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" mtu "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("65536")]),s._v(" qdisc noqueue state UNKNOWN group default qlen "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1000")]),s._v("\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n    inet "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1/8 scope "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("host")]),s._v(" lo\n       valid_lft forever preferred_lft forever\n    inet6 ::1/128 scope "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("host")]),s._v(" \n       valid_lft forever preferred_lft forever\n"),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(": ens33: "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("BROADCAST,MULTICAST,UP,LOWER_UP"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" mtu "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1500")]),s._v(" qdisc pfifo_fast state UP group default qlen "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1000")]),s._v("\n    link/ether 00:0c:29:57:8c:cd brd ff:ff:ff:ff:ff:ff\n    inet "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".73.141/24 brd "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".73.255 scope global noprefixroute ens33\n       valid_lft forever preferred_lft forever\n    inet6 fe80::720b:92b0:7f78:57ed/64 scope "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("link")]),s._v(" noprefixroute \n       valid_lft forever preferred_lft forever\n")])])]),e("p",[s._v("192.168.73.150的IP找不到了，我们再去192.168.73.142（主2）上去查看，可以发现192.168.73.150的IP。我们在navicat上操作数据库，是可以正常使用的。但这时实际连接的是192.168.73.142（主2）的数据库。我们是没有感知的。如果我们把192.168.73.141（主1）上的mysql服务再启动起来，192.168.73.150还会切换到192.168.73.141（主1）。")]),s._v(" "),e("h2",{attrs:{id:"总结"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[s._v("#")]),s._v(" 总结")]),s._v(" "),e("p",[s._v("我们通过MySQL主主结构+keepalived双机热备实现了MySQL的高可用，我们应用程序可以连接虚IP，具体连接的实际MySQL，不需要我们关心。如果我们再做读写分离的话，可以将MySQL（主2）作为主，配置数据库的主从关系。这时，虚IP连接的是MySQL（主1），MySQL（主1）将数据同步到MySQL（主2），然后MySQL（主2）再将数据同步到其他从库。如果MySQL（主1）挂掉，虚IP指向MySQL（主2）,MySQL（主2）再将数据同步到其他从库。")])])}),[],!1,null,null,null);t.default=r.exports}}]);