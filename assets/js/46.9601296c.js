(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{461:function(t,s,a){"use strict";a.r(s);var e=a(42),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"es7学习笔记-九-搜索"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#es7学习笔记-九-搜索"}},[t._v("#")]),t._v(" ES7学习笔记（九）搜索")]),t._v(" "),a("p",[t._v("搜索是ES最最核心的内容，没有之一。前面章节的内容，索引、动态映射、分词器等都是铺垫，最重要的就是最后点击搜索这一下。下面我们就看看点击搜索这一下的背后，都做了哪些事情。")]),t._v(" "),a("h2",{attrs:{id:"分数-score"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分数-score"}},[t._v("#")]),t._v(" 分数（score）")]),t._v(" "),a("p",[t._v("ES的搜索结果是按照相关分数的高低进行排序的，咦？！ 怎么没说搜索先说搜索结果的排序了？咱们这里先把这个概念提出来，因为在搜索的过程中，会计算这个分数。这个分数代表了这条记录匹配搜索内容的相关程度。分数是一个浮点型的数字，对应的是搜索结果中的"),a("code",[t._v("_score")]),t._v("字段，分数越高代表匹配度越高，排序越靠前。")]),t._v(" "),a("p",[t._v("在ES的搜索当中，分为两种，一种计算分数，而另外一种是不计算分数的。")]),t._v(" "),a("h2",{attrs:{id:"查询-query-context"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查询-query-context"}},[t._v("#")]),t._v(" 查询（query context）")]),t._v(" "),a("p",[t._v("查询，代表的是这条记录与搜索内容匹配的怎么样，除了决定这条记录是否匹配外，还要计算这条记录的相关分数。这个和咱们平时的查询是一样的，比如我们搜索一个关键词，分词以后匹配到相关的记录，这些相关的记录都是查询的结果，那这些结果谁排名靠前，谁排名靠后呢？这个就要看匹配的程度，也就是计算的分数。")]),t._v(" "),a("h2",{attrs:{id:"过滤-filter-context"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#过滤-filter-context"}},[t._v("#")]),t._v(" 过滤（filter context）")]),t._v(" "),a("p",[t._v("过滤，代表的含义非常的简单，就是YES or NO，这条记录是否匹配查询条件，"),a("strong",[t._v("它不会计算分数")]),t._v("。频繁使用的过滤还会被ES加入到缓存，以提升ES的性能。下面我们看一个查询和过滤的例子，这个也是ES官网中的例子。")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("GET /_search\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"query"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"bool"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n      "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"must"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"match"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"title"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Search"')]),t._v("        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(",\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"match"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"content"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Elasticsearch"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(",\n      "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"filter"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" \n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"term"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"status"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"published"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(",\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"range"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"publish_date"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"gte"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2015-01-01"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("我们看一下请求的路径"),a("code",[t._v("/_search")]),t._v("，这个是请求的路径，而请求的方法是"),a("code",[t._v("GET")]),t._v("，我们再看请求体中，有一个"),a("code",[t._v("query")]),t._v("，这个代表着查询的条件。而"),a("code",[t._v("bool")]),t._v("中的"),a("code",[t._v("must")]),t._v("被用作"),a("code",[t._v("query context")]),t._v("，它在查询的时候会计算记录匹配的相关分数。"),a("code",[t._v("filter")]),t._v("中的条件用作过滤，只会把符合条件的记录检索出来，不会计算分数。")]),t._v(" "),a("h2",{attrs:{id:"组合查询"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#组合查询"}},[t._v("#")]),t._v(" 组合查询")]),t._v(" "),a("p",[t._v("组合查询包含了其他的查询，像我们前面提到的"),a("code",[t._v("query context")]),t._v("和"),a("code",[t._v("filter context")]),t._v("。在组合查询中，分为很多种类型，我们挑重点的类型给大家介绍一下。")]),t._v(" "),a("h3",{attrs:{id:"boolean-query"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#boolean-query"}},[t._v("#")]),t._v(" Boolean Query")]),t._v(" "),a("p",[t._v("boolean查询，前面我们写的查询语句就是一个boolean查询，boolean查询中有几个关键词，表格如下：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("关键词")]),t._v(" "),a("th",[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("must")]),t._v(" "),a("td",[t._v("必须满足的条件，而且会计算分数，")])]),t._v(" "),a("tr",[a("td",[t._v("filter")]),t._v(" "),a("td",[t._v("必须满足的条件，不会计算分数")])]),t._v(" "),a("tr",[a("td",[t._v("should")]),t._v(" "),a("td",[t._v("可以满足的条件，会计算分数")])]),t._v(" "),a("tr",[a("td",[t._v("must_not")]),t._v(" "),a("td",[t._v("必须不满足的条件，不会计算分数")])])])]),t._v(" "),a("p",[t._v("我们看看下面的查询语句：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("POST _search\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"query"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"bool"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"must"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"term"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"user"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"kimchy"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(",\n      "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"filter"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"term"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"tag"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"tech"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(",\n      "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"must_not"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"range"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"age"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"gte"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(", "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"lte"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(",\n      "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"should"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"term"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"tag"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"wow"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(",\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"term"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"tag"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"elasticsearch"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(",\n      "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"minimum_should_match"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(",\n      "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"boost"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.0")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("上面的查询是一个典型的boolean组合查询，里边的关键词都用上了。很多小伙伴们可能对"),a("code",[t._v("must")]),t._v("和"),a("code",[t._v("should")]),t._v("的区别不是很了解，"),a("code",[t._v("must")]),t._v("是必须满足的条件，我们的例子中"),a("code",[t._v("must")]),t._v("里只写了一个条件，如果是多个条件，那么里边的所有条件必须满足。而"),a("code",[t._v("should")]),t._v("就不一样了，"),a("code",[t._v("should")]),t._v("里边现在列出了两个条件，并不是说这两个条件必须满足，到底需要满足几个呢？我们看一下下面的关键字"),a("code",[t._v("minimum_should_match")]),t._v("，从字面上我们就可以看出它的含义，最小"),a("code",[t._v("should")]),t._v("匹配数，在这里设置的是1，也就是说，"),a("code",[t._v("should")]),t._v("里的条件只要满足1个，就算匹配成功。在boolean查询中，如果存在一个"),a("code",[t._v("should")]),t._v("条件，而没有"),a("code",[t._v("filter")]),t._v("和"),a("code",[t._v("must")]),t._v("条件的话，那么"),a("code",[t._v("minimum_should_match")]),t._v("的默认值是1，其他情况默认值是0。")]),t._v(" "),a("p",[t._v("我们再看一个实际的例子吧，还记得前面我们创建的"),a("code",[t._v("ik_index")]),t._v("索引吗？索引中存在着几条数据，数据如下：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("_index")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("_type")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("_id")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("▲_score")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("id")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("title")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("desc")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("ik_index")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("_doc")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("fEsN-HEBZl0Dh1ayKWZb")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("1")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("1")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("苹果")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("苹果真好吃")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("ik_index")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("_doc")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("2")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("1")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("1")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("香蕉")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("香蕉真好吃")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("ik_index")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("_doc")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("1")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("1")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("1")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("香蕉")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("香蕉真好吃")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("ik_index")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("_doc")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("3")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("1")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("1")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("橘子")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("橘子真好吃")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("ik_index")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("_doc")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("4")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("1")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("1")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("桃子")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("桃子真好吃")])])])]),t._v(" "),a("p",[t._v("只有5条记录，我们新建一个查询语句，如下：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("POST /ik_index/_search\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"query"')]),t._v(":"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"bool"')]),t._v(":"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"must"')]),t._v(":"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"match"')]),t._v(":"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                        "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"desc"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"香蕉好吃"')]),t._v("\n                    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(",\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"from"')]),t._v(":0,\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"size"')]),t._v(":10,\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("我们查询的条件是"),a("code",[t._v("desc")]),t._v("字段满足"),a("code",[t._v("香蕉好吃")]),t._v("，由于我们使用的ik分词器，查询条件"),a("code",[t._v("香蕉好吃")]),t._v("会被分词为"),a("code",[t._v("香蕉")]),t._v("和"),a("code",[t._v("好吃")]),t._v("，但是5的数据的desc中都有"),a("code",[t._v("好吃")]),t._v("字段，所有5条数据都会被查询出来，我们执行一下，看看结果：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("_index")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("_type")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("_id")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("▲_score")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("id")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("title")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("desc")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("ik_index")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("_doc")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("2")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("0.98773474")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("1")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("香蕉")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("香蕉真好吃")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("ik_index")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("_doc")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("1")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("0.98773474")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("1")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("香蕉")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("香蕉真好吃")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("ik_index")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("_doc")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("3")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("0.08929447")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("1")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("橘子")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("橘子真好吃")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("ik_index")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("_doc")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("4")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("0.08929447")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("1")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("桃子")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("桃子真好吃")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("ik_index")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("_doc")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("fEsN-HEBZl0Dh1ayKWZb")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("0.07893815")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("1")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("苹果")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("苹果真好吃")])])])]),t._v(" "),a("p",[t._v("哈哈，5条数据全部查询出来了，和我们的预期是一样的，但是，我们需要注意一点的是"),a("code",[t._v("_score")]),t._v("字段，它们的分数是不一样的，我们的查询条件是"),a("code",[t._v("香蕉好吃")]),t._v("，所以既包含"),a("code",[t._v("香蕉")]),t._v("又包含"),a("code",[t._v("好吃")]),t._v("的数据分数高，我们看到分数到了0.98，而另外3条数据只匹配了"),a("code",[t._v("好吃")]),t._v("，所以分数只有0.7，0.8。")]),t._v(" "),a("h3",{attrs:{id:"boosting-query"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#boosting-query"}},[t._v("#")]),t._v(" Boosting Query")]),t._v(" "),a("p",[t._v("这个查询比较有意思，它有两个关键词"),a("code",[t._v("positive")]),t._v("和"),a("code",[t._v("negative")]),t._v("，"),a("code",[t._v("positive")]),t._v("是“正”，所有满足"),a("code",[t._v("positive")]),t._v("条件的数据都会被查询出来，"),a("code",[t._v("negative")]),t._v("是“负”，"),a("strong",[t._v("满足"),a("code",[t._v("negative")]),t._v("条件的数据并不会被过滤掉")]),t._v("，而是会"),a("strong",[t._v("扣减分数")]),t._v("。那么扣减分数要扣减多少呢？这里边有另外一个字段"),a("code",[t._v("negative_boost")]),t._v("，这个字段是得分的系数，它的分数在0~1之间，满足了"),a("code",[t._v("negative")]),t._v("条件的数据，它们的分数会乘以这个系数，比如这个系数是0.5，原来100分的数据如果满足了"),a("code",[t._v("negative")]),t._v("条件，它的分数会乘以0.5，变成50分。我们看看下面的例子，")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("POST /ik_index/_search\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"query"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"boosting"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"positive"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"term"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"desc"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"好吃"')]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(",\n      "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"negative"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"term"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"desc"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"香蕉"')]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(",\n      "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"negative_boost"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.5")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[a("code",[t._v("positive")]),t._v("条件是好吃，只要"),a("code",[t._v("desc")]),t._v("中有“好吃”的数据都会被查询出来，而"),a("code",[t._v("negative")]),t._v("的条件是香蕉，只要"),a("code",[t._v("desc")]),t._v("中包含“香蕉”的数据都会被扣减分数，扣减多少分数呢？它的得分将会变为"),a("code",[t._v("原分数*0.5")]),t._v("。我们执行一下，看看效果，")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("index")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("type")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("_id")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("score")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("_source.id")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("source.title")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("source.desc")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("ik_index")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("_doc")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("3")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("0.08929447")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("1")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("橘子")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("橘子真好吃")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("ik_index")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("_doc")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("4")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("0.08929447")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("1")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("桃子")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("桃子真好吃")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("ik_index")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("_doc")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("fEsN-HEBZl0Dh1ayKWZb")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("0.07893815")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("1")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("苹果")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("苹果真好吃")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("ik_index")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("_doc")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("2")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("0.044647235")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("1")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("香蕉")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("香蕉真好吃")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("ik_index")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("_doc")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("1")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("0.044647235")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("1")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("香蕉")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("香蕉真好吃")])])])]),t._v(" "),a("p",[t._v("我们可以看到前3条数据的分数都在0.09左右，而后两条的数据在0.044左右，很显然，后两条数据中的"),a("code",[t._v("desc")]),t._v("包含"),a("code",[t._v("香蕉")]),t._v("，它们的得分会乘以0.5的系数，所以分数只有前面数据的分数的一半。")]),t._v(" "),a("h3",{attrs:{id:"全文检索"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#全文检索"}},[t._v("#")]),t._v(" 全文检索")]),t._v(" "),a("p",[t._v("在前面几节的内容中，我们介绍过，只有字段的类型是"),a("code",[t._v("text")]),t._v("，才会使用全文检索，全文检索会使用到分析器，在我们的"),a("code",[t._v("ik_index")]),t._v("索引中，"),a("code",[t._v("title")]),t._v("和"),a("code",[t._v("desc")]),t._v("字段都是text类型，所以，这两个字段的搜索都会使用到ik中文分词器。全文检索比起前面的组合检索要简单一点，当然，在ES的官方文档中，全文检索中的内容还是挺多的，在这里我们只介绍一个标准的全文检索。")]),t._v(" "),a("p",[t._v("我们看看下面的语句，")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("POST /ik_index/_search\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"query"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"match"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"desc"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"query"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"苹果"')]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("在请求体中，"),a("code",[t._v("match")]),t._v("代替了之前的"),a("code",[t._v("bool")]),t._v("，"),a("code",[t._v("match")]),t._v("是标准的全文索引的查询。"),a("code",[t._v("match")]),t._v("后面跟的字段是要查询的字段名，在咱们的例子中，查询的字段是"),a("code",[t._v("desc")]),t._v("，如果有多个字段，可以列举多个。"),a("code",[t._v("desc")]),t._v("字段里，"),a("code",[t._v("query")]),t._v("就是要查询的内容。我们还可以在字段中指定分析器，使用"),a("code",[t._v("analyzer")]),t._v("关键字，如果不指定，默认就是索引的分析器。我们执行一下上面的查询，结果如下：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("index")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("type")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("_id")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("score")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("source.id")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("source.title")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("source.desc")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("ik_index")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("_doc")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("fEsN-HEBZl0Dh1ayKWZb")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("1.2576691")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("1")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("苹果")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("苹果真好吃")])])])]),t._v(" "),a("p",[t._v("我们可以看到相应的数据已经检索出来了。")]),t._v(" "),a("h2",{attrs:{id:"最后"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#最后"}},[t._v("#")]),t._v(" 最后")]),t._v(" "),a("p",[t._v("在ES中，检索的花样是比较多的，这里也不能一一给大家介绍了，只介绍一些最基本、最常用的查询功能。下一篇我们看一下ES的聚合查询功能。")])])}),[],!1,null,null,null);s.default=n.exports}}]);