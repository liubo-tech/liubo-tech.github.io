(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{454:function(t,s,e){"use strict";e.r(s);var v=e(42),_=Object(v.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"es7学习笔记-二-es的集群原理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#es7学习笔记-二-es的集群原理"}},[t._v("#")]),t._v(" ES7学习笔记（二）ES的集群原理")]),t._v(" "),e("h2",{attrs:{id:"发现"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#发现"}},[t._v("#")]),t._v(" 发现")]),t._v(" "),e("p",[e("strong",[t._v("发现")]),t._v("是节点之间彼此发现，形成集群的一个过程。这个过程发生的场景有很多，比如：你启动了一个集群节点，或者一个节点确认主节点已经挂掉了，或者一个新的主节点被选举了。")]),t._v(" "),e("p",[t._v("咱们在配置集群的时候在配置文件中配置了一个"),e("code",[t._v("discovery.seed_hosts")]),t._v("，这个就是种子地址列表，集群中的节点都在这个地址列表中。"),e("strong",[t._v("发现")]),t._v("的过程分为两个阶段：")]),t._v(" "),e("ol",[e("li",[t._v("每一个节点都会去连接种子地址列表中的地址，并且去确认这些节点是不是具有主节点资格的节点。")]),t._v(" "),e("li",[t._v("如果确认成功，这个节点将会向远程节点分享种子地址列表，并且远程节点也会把他的种子地址列表分享给这个节点。然后这个节点将会询问他发现的新的节点，最后形成集群。")])]),t._v(" "),e("p",[t._v("如果一个节点不具有主节点资格，那么他将去寻找已经选举出的主节点。如果没有发现主节点，它将会按照"),e("code",[t._v("discovery.find_peers_interval")]),t._v("配置的时间进行重试。")]),t._v(" "),e("p",[t._v("如果这个几点具有主节点资格，那么它将去寻找主节点（已选举出的），或者去发现所有具有主节点资格的，但是不是主节点的节点，并完成选举过程，选举出主节点。")]),t._v(" "),e("h2",{attrs:{id:"主节点的作用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#主节点的作用"}},[t._v("#")]),t._v(" 主节点的作用")]),t._v(" "),e("p",[t._v("主节点主要负责集群方面的轻量级的动作，比如：创建或删除索引，跟踪集群中的节点，决定分片分配到哪一个节点，在集群再平衡的过程中，如何在节点间移动数据等。一个集群有一个稳定的主节点是非常重要的。")])])}),[],!1,null,null,null);s.default=_.exports}}]);